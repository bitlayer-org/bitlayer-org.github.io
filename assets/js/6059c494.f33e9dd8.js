"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5641],{7476:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Build/GettingStarted/CompileAndRun","title":"Compile, Run and Deploy","description":"This guide walks you through compiling and running Bitlayer.","source":"@site/docs/Build/GettingStarted/CompileAndRun.md","sourceDirName":"Build/GettingStarted","slug":"/Build/GettingStarted/CompileAndRun","permalink":"/docs/Build/GettingStarted/CompileAndRun","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"buildSidebar","previous":{"title":"Quick Start Guide","permalink":"/docs/Build/GettingStarted/QuickStart"},"next":{"title":"Indexing-The-Graph","permalink":"/docs/Build/DeveloperResources/Indexers/TheGraph"}}');var l=r(4848),t=r(8453);const o={sidebar_position:3},d="Compile, Run and Deploy",s={},a=[{value:"Download",id:"download",level:2},{value:"Install Golang",id:"install-golang",level:2},{value:"Compile",id:"compile",level:2},{value:"Run",id:"run",level:2},{value:"Deployment",id:"deployment",level:2},{value:"Hardware",id:"hardware",level:3},{value:"Minimum",id:"minimum",level:4},{value:"Recommended",id:"recommended",level:4},{value:"Network &amp; Port",id:"network--port",level:4},{value:"Chain Node",id:"chain-node",level:3},{value:"Start Bash",id:"start-bash",level:3},{value:"systemd config",id:"systemd-config",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"compile-run-and-deploy",children:"Compile, Run and Deploy"})}),"\n",(0,l.jsx)(n.p,{children:"This guide walks you through compiling and running Bitlayer."}),"\n",(0,l.jsx)(n.h2,{id:"download",children:"Download"}),"\n",(0,l.jsx)(n.p,{children:"Download the Bitlayer source code using the following git command:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"git clone https://github.com/bitlayer-org/bitlayer-l2.git\n"})}),"\n",(0,l.jsx)(n.h2,{id:"install-golang",children:"Install Golang"}),"\n",(0,l.jsxs)(n.p,{children:["Before compiling Bitlayer, make sure you have Golang installed on your system. Refer to the official Golang website (",(0,l.jsx)(n.a,{href:"https://go.dev/dl/",children:"https://go.dev/dl/"}),") for download and installation instructions."]}),"\n",(0,l.jsx)(n.h2,{id:"compile",children:"Compile"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Navigate to the directory where you cloned the Bitlayer source code using:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"cd /path/to/bitlayer-l2\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Compile Bitlayer by running the following command:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"make geth\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This will create a compiled binary in the ",(0,l.jsx)(n.code,{children:"build/bin"})," folder."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"run",children:"Run"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Get a list of available options and their descriptions by running:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"./build/bin/geth --help\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Refer to the ",(0,l.jsx)(n.a,{href:"https://geth.ethereum.org/docs/fundamentals/command-line-options",children:"Command-line Options documentation"})," for specific usage details."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Custom Option:"})}),"\n",(0,l.jsxs)(n.p,{children:["Bitlayer offers a custom option named ",(0,l.jsx)(n.code,{children:"--traceaction"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"--traceaction value     (default: 0)\r\n    Trace internal tx call/create/suicide action, 0=no trace, 1=trace only native token > 0, 2=trace all\n"})}),"\n",(0,l.jsx)(n.p,{children:"This option allows you to enable or disable custom JSON-RPC methods for tracing internal transactions."}),"\n",(0,l.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,l.jsx)(n.p,{children:"Introduce systemd management configs."}),"\n",(0,l.jsx)(n.h3,{id:"hardware",children:"Hardware"}),"\n",(0,l.jsx)(n.h4,{id:"minimum",children:"Minimum"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"8core\r\n16g\r\nssd iops>5k\n"})}),"\n",(0,l.jsx)(n.h4,{id:"recommended",children:"Recommended"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"16core\r\n32g\r\nssd iops>5k\n"})}),"\n",(0,l.jsx)(n.h4,{id:"network--port",children:"Network & Port"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"External IP Address\r\nPort TCP/UDP 31031\n"})}),"\n",(0,l.jsx)(n.h3,{id:"chain-node",children:"Chain Node"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"config.toml"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'[Eth]\r\nSyncMode = "snap"\r\nTrieCleanCacheRejournal= 300000000000\r\nTrieTimeout = 20000000000\r\n\r\n\r\n[Eth.Miner]\r\nGasFloor = 40000000\r\nGasCeil = 40000000\r\nGasPrice = 25000000\r\nRecommit = 3000000000\r\n\r\n\r\n[Eth.TxPool]\r\nNoLocals = true\r\nJournal = "transactions.rlp"\r\nRejournal = 600000000000\r\nPriceLimit = 25000000\r\nPriceBump = 10\r\nAccountSlots = 64\r\nGlobalSlots = 10240\r\nAccountQueue = 32\r\nGlobalQueue = 1024\r\nLifetime = 1800000000000\r\nDiscountContract="0xcfB249808860Af63C500da0426EF17431699a36f"\r\n\r\n[Node]\r\nDataDir = "/data/bitlayer-l2/chain/data"\r\nInsecureUnlockAllowed = true\r\nNoUSB = true\r\nIPCPath = "geth.ipc"\r\nHTTPHost = "0.0.0.0"\r\nHTTPPort = 8545\r\nHTTPCors = ["*"]\r\nHTTPVirtualHosts = ["*"]\r\nHTTPModules = [\'eth\', \'net\', \'web3\']\r\n\r\nWSHost = "0.0.0.0"\r\nWSPort = 8546\r\nWSModules = [\'eth\', \'net\', \'web3\']\r\n\r\nGraphQLVirtualHosts = ["localhost"]\r\n\r\n\r\n[Node.P2P]\r\nMaxPeers = 50\r\nNoDiscovery = false\r\nListenAddr = ":31031"\r\nEnableMsgEvents = false\r\n\r\n[Node.HTTPTimeouts]\r\nReadTimeout = 30000000000\r\nWriteTimeout = 30000000000\r\nIdleTimeout = 120000000000\n'})}),"\n",(0,l.jsx)(n.p,{children:"use snap sync in the config, if full needed - change this line"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'SyncMode = "snap"\n'})}),"\n",(0,l.jsx)(n.p,{children:"to"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'SyncMode = "full"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"start-bash",children:"Start Bash"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["To show full detail help info of all flags, type ",(0,l.jsx)(n.code,{children:"geth help"})," or ",(0,l.jsx)(n.code,{children:"geth -h"})]}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"run.sh"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"#!/usr/bin/env bash\r\n/data/bitlayer-l2/chain/geth-linux-amd64 \\\r\n--config /data/bitlayer-l2/chain/config.toml  \\\r\n--log.file /data/bitlayer-l2/chain/logs/chain.log \\\r\n--log.rotate=true \\\r\n--authrpc.port 8445 \\\r\n--traceaction 2 \\\r\n--verbosity 3 \n"})}),"\n",(0,l.jsx)(n.p,{children:"if you need to use it as archive node, add:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"--syncmode full \\\r\n--gcmode archive \\\n"})}),"\n",(0,l.jsx)(n.p,{children:"so:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"#!/usr/bin/env bash\r\n/data/bitlayer-l2/chain/geth-linux-amd64 \\\r\n--config /data/bitlayer-l2/chain/config.toml  \\\r\n--log.file /data/bitlayer-l2/chain/logs/chain.log \\\r\n--log.rotate=true \\\r\n--authrpc.port 8445 \\\r\n--traceaction 2 \\\r\n--syncmode full \\\r\n--gcmode archive \\\r\n--verbosity 3  \n"})}),"\n",(0,l.jsx)(n.p,{children:"If no network flags were provided, the node will connect the bitlayer mainnet by default. If you want to connect to bitlayer testnet, add:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"--testnet\n"})}),"\n",(0,l.jsx)(n.p,{children:"and change this line in the config:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'DiscountContract="0x077d303A09Cf37dcb27c99458f411267E30d2e0f"\n'})}),"\n",(0,l.jsx)(n.h3,{id:"systemd-config",children:"systemd config"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"[Unit]\r\nDescription=bitlayer-l2 chain service\r\n\r\n[Service]\r\nType=simple\r\nExecStart=/bin/sh /data/bitlayer-l2/chain/run.sh\r\nWorkingDirectory=/data/bitlayer-l2/chain\r\nTimeoutSec=600\r\nRestart=on-failure\r\nRestartSec=5s\r\n\r\nLimitNOFILE=65536\r\n\r\n[Install]\r\nWantedBy=multi-user.target\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>d});var i=r(6540);const l={},t=i.createContext(l);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);